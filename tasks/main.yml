---
- name: Set schema CN from variable
  set_fact:
    schema_cn: "{{ ols_schema | replace('\n ', '') | regex_search('(?<=\\ncn:\\s)[^\\n]+') }}"
  failed_when: schema_cn == ''
  when: ols_schema is defined

- name: Read schema DN from file
  shell: >-
    sed -ne '/^ /! { x; s/\n //g; 1!p; }; /^ /H; $ {g; s/\n //g; p; }' {{ ols_ldif | quote }} |
    sed -ne '/^cn:/ { s/^cn: \+//; p; q; }'
  args:
    warn: false
  register: cn
  changed_when: false
  when: ols_schema is not defined

- name: Set schema CN from file
  set_fact:
    schema_cn: "{{ cn.stdout }}"
  failed_when: schema_cn == ''
  when: ols_schema is not defined

- name: Check if schema is loaded
  command: >-
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b cn=schema,cn=config -s one
    {{ ('(cn={*}' ~ schema_cn ~ ')') | quote }}
    dn
  changed_when: false
  register: schema_loaded

- name: Load schema from variable
  command: ldapadd -Q -Y EXTERNAL -H ldapi:/// -f {{ ols_ldif | quote }}
  when: ols_schema is not defined and not schema_loaded.stdout

- name: Load schema from file
  command: ldapadd -Q -Y EXTERNAL -H ldapi:///
  args:
    stdin: "{{ ols_schema }}"
  when: ols_schema is defined and not schema_loaded.stdout
